# Q26. What is a string? How can we declare string in Python?
"""Strings are sequences of characters.""" # str1 = “ineuron” ---- print(“str1”)
# Q27. How can we access the string using its index?
"""We access the string inside square brackets [] ."""
# Q28. Write a code to get the desired output of the following
string = "Big Data iNeuron"
desired_output = "norueNi"

strings = "Big Data iNeuron"
b = list(strings.split(' '))
print(b[len(b)-1][:: 1])


# Q29. Write a code to get the desired output of the following
string = "Big Data iNeuron"
desired_output = "norueNi"
# Q30. Resverse the string given in the above question.
str1 = "Big Data iNeuron"
print(str1 [-1 :: -1])


# Q31. How can you delete entire string at once?
Python will not allow deleting a particular character in a string. Whereas you can remove the entire string variable using the del command.  
"""str1 = "Big Data iNeuron"
del str1 
print(str1)"""

error happen..
# Q32. What is escape sequence?
To insert characters that are illegal in a string, use an escape character. An escape character is a backslash (\) followed by the character you want to insert
# Q33. How can you print the below string?
'iNeuron's Big Data Course'
str1 = "iNeuron's Big Data Course"
print(str1)


# Q34. What is a list in Python?
List. Lists are used to store multiple items in a single variable.
# Q35. How can you create a list in Python?
L1 = []
print(type(L1))

#Q36. How can we access the elements in a list?
we use index operater []

# Q37. Write a code to access the word "iNeuron" from the given list.
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
list2 = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

print(len(list2))
print(list2[4][-1])

# Q38. Take a list as an input from the user and find the length of the list.
list3 = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
print(len(list3))

# Q39. Add the word "Big" in the 3rd index of the given list.
lst = ["Welcome", "to", "Data", "course"]
List = ["Welcome", "to", "Data", "course"]

List.insert(3, 'Big')

print(List)

# Q40 What is a tuple? How is it different from list
# ans -- Tuples are used to store multiple items in a single variable.
   # A tuple is a collection which is ordered and unchangeable.
   #it different from list The list is dynamic, whereas the tuple has static characteristics

#Q41. How can you create a tuple in Python? 

# ans - 
t1 = ()
print(type(t1))

#Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer 
# with reason ? .

tuple = ("ARYAN",)
print(tuple)

#Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
# ans -- Since tuples are immutable, they do not have a build-in append() method, but 
# there are other ways to add items to a tuple.
thistuple = ("apple", "banana", "cherry")
y = list(thistuple)
y.append("orange")
thistuple = thistuple(y)
print(thistuple)


#Q44. Take a tuple as an input and print the count of elements in it.

#ans --
Tuple1 = (0, 1, 2, 3, 2, 3, 1, 3, 2)

  
# count the appearance of 2
res = Tuple2.count(2)
print('Count of 2 in Tuple2 is:', res)

#Q45. What are sets in Python?

# ans -- Sets are used to store multiple items in a single variable.
set1 = set()
print(type(set1))

#Q46. How can you create a set?
set1 = {1,2,3,4,5}
print(set1)
print(type(set1))

#Q47. Create a set and add "iNeuron" in your set.
# ans--
set1 = {'welcome','to','BigData'}
set1.add("iNeuron")
print(set1)

#Q48. Try to add multiple values using add() function.

# ans -- 
set4 = set()
set4.add(1)
set4.add(2)
set4.add(3)
set4.add(4)
set4.add(5)
set4.add(6)
print(set4)

#Q49. How is update() different from add()?

# ans -- 
set4 = set()
set4.add(1)
set4.add(2)
set4.add(3)
set4.add(4)
set4.add(2)
set4.add(4)
print(set4)

tmp = [1,2,3,4,5,6,1,2,3,4,5]
set4.update(tmp)
print(set4)

#Q50. What is clear() in sets?

# ans --
set1 = {'welcome','to','BigData','iNeuron'}
set1.clear()
print(set1)

#Q51. What is frozen set?

#ans -- The frozenset() function returns an unchangeable frozenset object

#Q54. What is intersection() in sets? Explain via code.

#ans --
set_a = {1,2,3,4,5,6,7}
set_b = {3,2,6,7,8,9,10}
print(set_a & set_b)

#Q55. What is dictionary ibn Python?

#ans -- A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
dict1 = {}
print(type(dict1))

#Q56. How is dictionary different from all other data structures.

#ans -- Dictionaries are changeable, meaning that we can change, add or remove 
# items after the dictionary has been created.

#Q57. How can we delare a dictionary in Python?

#ans -- 
dict2 = {}
dict2['name'] = 'Aryan'
dict2['age'] = '19'
dict2['city'] = 'Lucknow'
print(dict2)

#58. What will the output of the following?
var = {}
print(type(var))

# ans -- 
<class 'dict'>

#Q59. How can we add an element in a dictionary?

# ans -- 
dict5 = {
    "fruits": "apple",
    "cake": "choclate",
}
dict5["vegetable"] = "potato"
print(dict5)

#Q60. Create a dictionary and access all the values in that dictionary.

# ans -- 
dict2 = {}
dict2['name'] = 'Aryan'
dict2['age'] = '19'
dict2['city'] = 'Lucknow'

print(dict2['name'])
print(dict2['city'])

#61. Create a nested dictionary and access all the element in the inner dictionary.

#ans -- 
dict2 = {}
dict2['name'] = 'Aryan'
dict2['age'] = '19'
dict2['city'] = 'Lucknow'

total_values = list(dict2.values())
print("Total Values in dictionary :",total_values)

#Q62. What is the use of get() function?

# ans --  access the items of a dictionary by referring to its key name, inside square brackets

#Q63. What is the use of items() function?

#ans -- Loop through both keys and values, by using the items() method:

#Q64. What is the use of pop() function?

# ans -- The pop() method removes the item with the specified key name:

#Q65. What is the use of popitems() function?

# ans -- The popitem() method removes the last inserted item

#Q66. What is the use of keys() function?

# ans -- The keys() method will return a list of all the keys in the dictionary.

#Q67. What is the use of values() function?

#ans -- The keys() method will return a list of all the keys in the dictionary.

#Q68. What are loops in Python?

# ans --   loops to handle looping requirements. Python provides two ways for executing the loops
# 1- for loop , 2 - while loop. 

#Q69. How many type of loop are there in Python?

# ans -- there are 2 type of loop [1 - for loop , 2 - while loop]

#Q70. What is the difference between for and while loops?

# ans --  for loop - when number of interations are know
 #        while loop - when number of interation are not know ,
 #         the while loop we can execute a set of statements as long as a condition is true

# Q71. What is the use of continue statement?

#ans -- the continue statement we can stop the current iteration, and continue with the next
i = 0
while i < 6:
  i += 1
  if i == 3:
    continue
  print(i)

#Q72. What is the use of break statement?

# ans-- the break statement we can stop the loop even if the while condition is true:
i = 1
while i < 6:
  print(i)
  if i == 3:
    break
  i += 1 

#Q73. What is the use of pass statement?

#ans -- Create a placeholder for future code:

#Q74. What is the use of range() function?

#ans -- Create a sequence of numbers from 0 to 5, and print each item in the sequence:
x = range(6)
for n in x:
  print(n) 

#Q75. How can you loop over a dictionary?

# ans-- You can loop through a dictionary by using a for loop.
#  When looping through a dictionary, the return value are the keys of the dictionary,
